name: Autograding Tests
'on':
- push
- repository_dispatch
permissions:
  checks: write
  actions: read
  contents: write
jobs:
  run-autograding-tests:
    runs-on: ubuntu-latest
    if: github.actor != 'github-classroom[bot]'
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Quiz Challenge
      id: quiz-challenge
      uses: classroom-resources/autograding-command-grader@v1
      with:
        test-name: Quiz Challenge
        setup-command: |
          curl -LsSf https://astral.sh/uv/install.sh | sh
          export PATH="$HOME/.cargo/bin:$PATH"
          uv venv
          source .venv/bin/activate
          . $HOME/.cargo/env
          uv pip install -r requirements.txt
        command: |
          ./grading/run_quiz_test.sh \
            --config ./grading/config.toml \
            --quiz-file ./assignment/quiz.toml \
            --api-key ${{ secrets.CHAT_API }} \
            --output ./assignment/quiz_results.json
        timeout: 10
        max-score: 5
    - name: Task 1
      id: task-1
      uses: classroom-resources/autograding-command-grader@v1
      with:
        test-name: Assignment - Test 1
        command: uv run tests/test_01.py
        timeout: 10
        max-score: 5
    - name: Task 2
      id: task-2
      uses: classroom-resources/autograding-command-grader@v1
      with:
        test-name: Assignment - Test 2
        command: uv run tests/test_02.py
        timeout: 10
        max-score: 5
    - name: Task 3
      id: task-3
      uses: classroom-resources/autograding-command-grader@v1
      with:
        test-name: Assignment - Test 3
        command: uv run tests/test_03.py
        timeout: 10
        max-score: 5
    - name: Commit and push quiz results
      if: always()
      run: |
        if [ -f "./assignment/quiz_results.json" ]; then
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add assignment/quiz_results.json
          if git diff --staged --quiet; then
            echo "No changes to commit"
          else
            git commit -m "Add quiz results from automated grading"
            git push
          fi
        else
          echo "No quiz results file to commit"
        fi
    - name: Autograding Reporter
      uses: classroom-resources/autograding-grading-reporter@v1
      env:
        TASK-1_RESULTS: "${{steps.task-1.outputs.result}}"
        TASK-2_RESULTS: "${{steps.task-2.outputs.result}}"
        TASK-3_RESULTS: "${{steps.task-3.outputs.result}}"
        QUIZ_CHALLENGE_RESULTS: "${{steps.quiz-challenge.outputs.result}}"
      with:
        runners: task-1,task-2,task-3,quiz-challenge